{
  
    
        "post0": {
            "title": "Understanding Wealth Mindset and its difference with Status Mindset",
            "content": "Understanding Wealth Mindset and its difference with Status Mindset . I had seen the terms “Wealth” and “Status” on an episode of BeerBiceps Podcast by Ranveer Allahbadia with Kunal Shah of cred frame. . Youtube link of the Podcast . The topic was quite interesting with Kunal Shah explaining that there are two kinds of societies, wealth driven and status driven and there is a lot of difference between these two types of socities. The topic was covered very briefly and more context was derived by reading Kunal’s Twitter timeline. . . |Wealth driven society | Status Driven Society| |—–|—–| |- more colleborative society|- less colleborative Society| |- is not zero sum|- is zero sum| |- Wealth Generation is rewarded|-Wealth Generation is abhored| |- Systematic due to positive sum mindset|- Chaotic due to zero sum mindset| |- has democratic leaders|- prefers authoritarian leadership| |- focus on quality/value worship|- focus on icon/hero worship| |- Celebrate risk takers as they are trying to do something different|- Destest risk taking as it is detrimental to status quo| |- Novalty is a feature|- Novelty is a bug| — . How I see status and wealth driven mindset . The points that are specified for society can be similarly applied for mindset as well. A person who is living in a status driven society is more susceptable to be inflicted with status driven mindset and vice versa. What’s important here is to evaluate ones actions in terms of “status driven” or “wealth driven”. The final objective of the evaluation is to think in such as way as to habituate the wealth driven actions and deloop status driven actions from day to day routine. .",
            "url": "http://kaushalbundel.page/funda/status/value/mindset/2020/11/30/Wealth-vs-Status.html",
            "relUrl": "/funda/status/value/mindset/2020/11/30/Wealth-vs-Status.html",
            "date": " • Nov 30, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Understanding Air pollution",
            "content": "The winter season here in Northern part of the country and with this we have the call of pollution/smog in news and in life all around us. Many of my friends and relatives are suffering from the ill effects of hightened air pollution in these times. This write up is my effort in understanding the trend of air pollution, with a slight degression on the possible causes and consitituents of air pollution. . Small description about the constituents which make up air pollution around us: . PM (Particulate Matter):PM is a mixture of solid and liqued particles that are suspended in the air. IARC and WHO designate these airborne particulates as Group 1 carcirogen. Particulates are most harmful form of air pollution due to their ability to penetrate deep into lungs, blood streams and brain causing health problems including heart attacks, respiratory diseases and premature death.Some particulates originate naturally from forest fires, volcanoes, dust storms and living vegetation. Human activities such as buring of fossil fuels in vehicles, stubble burning, road dust and power plants are some of the man made source of PM. The amount of time a particle can be suspended in the air depends upon the size, Large particles (&gt;10 micrometers) tend to settle on the ground by gravity in a matter of hours while smaller particles can be suspended in air for weeks and can mostly be removed by precipitation. PM2.5: PM2.5 are fine particles with diameter of 2.5 micrometers. These particles can be made up from different chemicals, Some are emitted directly from a source such as constuction sites, unpaved roads, fields, crackers or fires. | PM10: This size of Particulate matter is small enough to go into lungs and throat. High levels of PM10 can make you cough, your nose run and eyes sting. | . | NOx: NOx is a generic term for Nitrogen oxides that are most relevant for air pollution. Nitrogen Oxides are expelled from high temperature combustion, and are also produced during thunderstorms by electric discharge. They can be seen as a brown haze dome above or a plume downwind of cities. NOx gases are usually produced from the reaction between Nitrogen and Oxygen during combustion of fuels (in car engines).NOx respiratory exposure can trigger and exacerbate existing asthma symptoms, and may even lead to the development of asthma over longer periods of time. It has also been associated with heart disease, diabetes, birth outcomes, and all-cause mortality, but these nonrespiratory effects are less well-established. | NH3 (Ammonia): Ammonia (NH3) is a highly reactive and soluble alkaline gas. It originates from both natural and human generated sources, with the main source being agriculture, e.g. manures, slurries and fertiliser application.Ammonia is also emitted from a range of non-agricultural sources, such as catalytic converters in petrol cars, landfill sites, sewage works, composting of organic materials, combustion, industry and wild mammals and birds. Exposure to high concentrations of ammonia in air causes immediate burning of the eyes, nose, throat and respiratory tract and can result in blindness, lung damage or death. Inhalation of lower concentrations can cause coughing, and nose and throat irritation. | CO (Carbon Monooxide): Carbon monoxide (CO)—a colorless, odorless, tasteless, and toxic air pollutant—is produced in the incomplete combustion of carbon-containing fuels, such as gasoline, natural gas, oil, coal, and wood. | SO2: Sulphur Dioxide: Sulfur dioxide (SO2), a colorless, bad-smelling, toxic gas, is part of a larger group of chemicals referred to as sulfur oxides (SOx). These gases, especially SO2, are emitted by the burning of fossil fuels — coal, oil, and diesel — or other materials that contain sulfur. Sources include power plants, metals processing and smelting facilities, and vehicles. Diesel vehicles and equipment have long been a major source of sulfur dioxide. Like nitrogen dioxide, sulfur dioxide can create secondary pollutants once released into the air. Secondary pollutants formed with sulfur dioxide include sulfate aerosols, particulate matter, and acid rain. Sulfur dioxide, associated SOx, and secondary pollutants can contribute to respiratory illness by making breathing more difficult, especially for children, the elderly, and those with pre-existing conditions. Longer exposures can aggravate existing heart and lung conditions, as well. Sulfur dioxide and other SOx are partly culpable in the formation of thick haze and smog, which can impair visibility in addition to impacting health. Beyond human health impacts, sulfur dioxide’s contribution to acid rain can cause direct harm to trees and plants by damaging exposed tissues and, subsequently, decreasing plant growth. Other sensitive ecosystems and waterways are also impacted by acid rain. | O3: Ozone is a gas composed of three atoms of oxygen (O3). Ozone occurs both in the Earth&#39;s upper atmosphere and at ground level. Ozone can be good or bad, depending on where it is found. Good Ozone called stratospheric ozone, occurs naturally in the upper atmosphere, where it forms a protective layer that shields us from the sun&#39;s harmful ultraviolet rays. Tropospheric, or ground level ozone, is a harmful air pollutant, because of its effects on people and the environment, and it is the main ingredient in “smog&quot;. Tropospheric Ozone, is created by chemical reactions between oxides of nitrogen (NOx) and volatile organic compounds (VOC). This happens when pollutants emitted by cars, power plants, industrial boilers, refineries, chemical plants, and other sources chemically react in the presence of sunlight. Ozone in the air we breathe can harm our health. People most at risk from breathing air containing ozone include people with asthma, children, older adults, and people who are active outdoors, especially outdoor workers. In addition, people with certain genetic characteristics, and people with reduced intake of certain nutrients, such as vitamins C and E, are at greater risk from ozone exposure. | Benzene: The main sources of benzene are from vehicle exhaust and other combustion processes and from industry producing or using it. Benzene is also released naturally from volcanoes and forest fires, but the amounts released are insignificant in comparison to those emitted by man&#39;s activities. Benzene is a proven carcinogen. However, exposure to normal environmental concentrations in air (from the vapourisation of petrol during re-fuelling of vehicles, from tobacco smoke, glues, paint, furniture wax and detergents) is thought unlikely to be dangerous in this respect. Inhalation of extremely high levels of benzene (following an accidental releae) could be fatal and longer term exposure to lower concentrations (in occupational settings for example) may damage blood-forming organs. When ingested or applied directly to the skin (only likely in occupational settings), benzene is very toxic. Inhalation of ground level ozone (in the formation of which benzene can be involved) can exacerbate respiratory conditions such as asthma. | Toulene: Toluene is a clear, colorless liquid with a distinctive smell. It is a good solvent (a substance that can dissolve other substances). Toluene occurs naturally in crude oil and in the tolu tree. It is produced in the process of making gasoline and other fuels from crude oil and in making coke from coal.Toluene is a clear, colorless liquid with a distinctive smell. It is a good solvent (a substance that can dissolve other substances). Toluene occurs naturally in crude oil and in the tolu tree. It is produced in the process of making gasoline and other fuels from crude oil and in making coke from coal.A serious health concern is that toluene may have an effect on your nervous system (brain and nerves). Nervous system effects can be temporary, such as headaches, dizziness, or unconsciousness. However, effects such as incoordination, cognitive impairment, and vision and hearing loss may become permanent with repeated exposure, especially at concentrations associated with intentional solvent abuse. ow to moderate, day-after-day exposure to toluene in your workplace can cause tiredness, confusion, weakness, drunken-type actions, memory loss, nausea, and loss of appetite. These symptoms usually disappear when exposure is stopped. You may experience some hearing and color vision loss after long-term daily exposure to toluene in the workplace. | Xylene: Xylene is an aromatic hydrocarbon widely used in industry and medical technology as a solvent. It is a colorless, sweet-smelling liquid or gas occurring naturally in petroleum, coal and wood tar, and is so named because it is found in crude wood spirit. Xylene is primarily released from industrial sources, in automobile exhaust, and during its use as a solvent. Short-term exposure of people to high levels of xylene can cause irritation of the skin, eyes, nose, and throat; difficulty in breathing; impaired function of the lungs; delayed response to a visual stimulus; impaired memory; stomach discomfort; and possible changes in the liver and kidneys. Both short- and long-term exposure to high concentrations of xylene can also cause a number of effects on the nervous system, such as headaches, lack of muscle coordination, dizziness, confusion, and changes in one&#39;s sense of balance. | . Data Loading . # importing libraries import pandas as pd import os import matplotlib.pyplot as plt import altair as alt import numpy as np . . # reading the file df=pd.read_csv(&quot;city_day.csv&quot;) . . df.head() . City Date PM2.5 PM10 NO NO2 NOx NH3 CO SO2 O3 Benzene Toluene Xylene AQI AQI_Bucket . 0 Ahmedabad | 2015-01-01 | NaN | NaN | 0.92 | 18.22 | 17.15 | NaN | 0.92 | 27.64 | 133.36 | 0.00 | 0.02 | 0.00 | NaN | NaN | . 1 Ahmedabad | 2015-01-02 | NaN | NaN | 0.97 | 15.69 | 16.46 | NaN | 0.97 | 24.55 | 34.06 | 3.68 | 5.50 | 3.77 | NaN | NaN | . 2 Ahmedabad | 2015-01-03 | NaN | NaN | 17.40 | 19.30 | 29.70 | NaN | 17.40 | 29.07 | 30.70 | 6.80 | 16.40 | 2.25 | NaN | NaN | . 3 Ahmedabad | 2015-01-04 | NaN | NaN | 1.70 | 18.48 | 17.97 | NaN | 1.70 | 18.59 | 36.08 | 4.43 | 10.14 | 1.00 | NaN | NaN | . 4 Ahmedabad | 2015-01-05 | NaN | NaN | 22.10 | 21.42 | 37.76 | NaN | 22.10 | 39.33 | 39.31 | 7.01 | 18.89 | 2.78 | NaN | NaN | . Preparing the data . #Converting the object datetime to pandas datetime #We need to do this convesrion to enable time series data ploting df= df.rename({&#39;PM2.5&#39;:&#39;PM&#39;}, axis=1) df[&#39;Date&#39;]=pd.to_datetime(df[&#39;Date&#39;]) . . city_list=df[&#39;City&#39;].unique() f&quot;The cities under consideration of this study are:&quot;,&#39;, &#39;.join(city_list) . . (&#39;The cities under consideration of this study are:&#39;, &#39;Ahmedabad, Aizawl, Amaravati, Amritsar, Bengaluru, Bhopal, Brajrajnagar, Chandigarh, Chennai, Coimbatore, Delhi, Ernakulam, Gurugram, Guwahati, Hyderabad, Jaipur, Jorapokhar, Kochi, Kolkata, Lucknow, Mumbai, Patna, Shillong, Talcher, Thiruvananthapuram, Visakhapatnam&#39;) . df.head() . . City Date PM PM10 NO NO2 NOx NH3 CO SO2 O3 Benzene Toluene Xylene AQI AQI_Bucket . 0 Ahmedabad | 2015-01-01 | NaN | NaN | 0.92 | 18.22 | 17.15 | NaN | 0.92 | 27.64 | 133.36 | 0.00 | 0.02 | 0.00 | NaN | NaN | . 1 Ahmedabad | 2015-01-02 | NaN | NaN | 0.97 | 15.69 | 16.46 | NaN | 0.97 | 24.55 | 34.06 | 3.68 | 5.50 | 3.77 | NaN | NaN | . 2 Ahmedabad | 2015-01-03 | NaN | NaN | 17.40 | 19.30 | 29.70 | NaN | 17.40 | 29.07 | 30.70 | 6.80 | 16.40 | 2.25 | NaN | NaN | . 3 Ahmedabad | 2015-01-04 | NaN | NaN | 1.70 | 18.48 | 17.97 | NaN | 1.70 | 18.59 | 36.08 | 4.43 | 10.14 | 1.00 | NaN | NaN | . 4 Ahmedabad | 2015-01-05 | NaN | NaN | 22.10 | 21.42 | 37.76 | NaN | 22.10 | 39.33 | 39.31 | 7.01 | 18.89 | 2.78 | NaN | NaN | . Analysis of PAN India data . Lets try to understand how air pollutant are spread PAN India . # Total country performance ind=df[&#39;AQI_Bucket&#39;].value_counts() ind= pd.DataFrame(ind, columns=[&#39;AQI_Bucket&#39;]) ind[&#39;per&#39;]=(ind[&#39;AQI_Bucket&#39;]/ (ind[&#39;AQI_Bucket&#39;].sum()))*100 ind . . AQI_Bucket per . Moderate 8829 | 35.529175 | . Satisfactory 8224 | 33.094567 | . Poor 2781 | 11.191147 | . Very Poor 2337 | 9.404427 | . Good 1341 | 5.396378 | . Severe 1338 | 5.384306 | . f&quot;Out of total captured days ({ind[&#39;AQI_Bucket&#39;].sum()}), around {ind.loc[[&#39;Poor&#39;,&#39;Very Poor&#39;,&#39;Severe&#39;]][&#39;per&#39;].sum():.2f}% have bad air quality&quot; . . &#39;Out of total captured days (24850), around 25.98% have bad air quality&#39; . City wise Breakup of AQI across India . In this section, we need to understand how AQI Index is distributed across India. . city_AQI=df.groupby(by=&#39;City&#39;)[&#39;AQI_Bucket&#39;].value_counts() . . city_list= df[&#39;City&#39;].unique() . . for city in city_list: print(f&#39;City Name:{city} and AQI Index n{city_AQI[city]}&#39;) . . City Name:Ahmedabad and AQI Index AQI_Bucket Severe 638 Poor 238 Very Poor 216 Moderate 198 Satisfactory 43 Good 1 Name: AQI_Bucket, dtype: int64 City Name:Aizawl and AQI Index AQI_Bucket Good 83 Satisfactory 28 Name: AQI_Bucket, dtype: int64 City Name:Amaravati and AQI Index AQI_Bucket Satisfactory 409 Moderate 219 Good 158 Poor 47 Very Poor 8 Name: AQI_Bucket, dtype: int64 City Name:Amritsar and AQI Index AQI_Bucket Satisfactory 473 Moderate 448 Good 84 Poor 67 Very Poor 47 Severe 7 Name: AQI_Bucket, dtype: int64 City Name:Bengaluru and AQI Index AQI_Bucket Satisfactory 1124 Moderate 630 Good 115 Poor 36 Very Poor 5 Name: AQI_Bucket, dtype: int64 City Name:Bhopal and AQI Index AQI_Bucket Moderate 165 Satisfactory 76 Poor 31 Very Poor 4 Good 2 Name: AQI_Bucket, dtype: int64 City Name:Brajrajnagar and AQI Index AQI_Bucket Moderate 421 Satisfactory 122 Poor 120 Very Poor 36 Good 14 Name: AQI_Bucket, dtype: int64 City Name:Chandigarh and AQI Index AQI_Bucket Satisfactory 154 Moderate 74 Good 48 Poor 20 Very Poor 3 Name: AQI_Bucket, dtype: int64 City Name:Chennai and AQI Index AQI_Bucket Satisfactory 941 Moderate 804 Poor 110 Good 12 Very Poor 11 Severe 6 Name: AQI_Bucket, dtype: int64 City Name:Coimbatore and AQI Index AQI_Bucket Satisfactory 288 Good 43 Moderate 13 Name: AQI_Bucket, dtype: int64 City Name:Delhi and AQI Index AQI_Bucket Poor 542 Very Poor 520 Moderate 519 Severe 239 Satisfactory 158 Good 21 Name: AQI_Bucket, dtype: int64 City Name:Ernakulam and AQI Index AQI_Bucket Satisfactory 104 Moderate 49 Name: AQI_Bucket, dtype: int64 City Name:Gurugram and AQI Index AQI_Bucket Moderate 454 Very Poor 348 Poor 310 Satisfactory 225 Severe 95 Good 21 Name: AQI_Bucket, dtype: int64 City Name:Guwahati and AQI Index AQI_Bucket Satisfactory 135 Good 116 Moderate 111 Poor 69 Very Poor 59 Severe 5 Name: AQI_Bucket, dtype: int64 City Name:Hyderabad and AQI Index AQI_Bucket Moderate 958 Satisfactory 710 Good 141 Poor 54 Very Poor 10 Severe 7 Name: AQI_Bucket, dtype: int64 City Name:Jaipur and AQI Index AQI_Bucket Moderate 651 Satisfactory 317 Poor 110 Very Poor 10 Good 4 Severe 2 Name: AQI_Bucket, dtype: int64 City Name:Jorapokhar and AQI Index AQI_Bucket Moderate 451 Satisfactory 137 Poor 121 Very Poor 34 Severe 18 Good 10 Name: AQI_Bucket, dtype: int64 City Name:Kochi and AQI Index AQI_Bucket Satisfactory 82 Moderate 74 Poor 2 Name: AQI_Bucket, dtype: int64 City Name:Kolkata and AQI Index AQI_Bucket Satisfactory 285 Moderate 152 Good 119 Poor 119 Very Poor 66 Severe 13 Name: AQI_Bucket, dtype: int64 City Name:Lucknow and AQI Index AQI_Bucket Moderate 578 Very Poor 473 Satisfactory 365 Poor 352 Severe 110 Good 15 Name: AQI_Bucket, dtype: int64 City Name:Mumbai and AQI Index AQI_Bucket Satisfactory 428 Moderate 285 Poor 35 Good 26 Very Poor 1 Name: AQI_Bucket, dtype: int64 City Name:Patna and AQI Index AQI_Bucket Moderate 507 Very Poor 371 Poor 236 Severe 174 Satisfactory 171 Name: AQI_Bucket, dtype: int64 City Name:Shillong and AQI Index AQI_Bucket Good 111 Satisfactory 84 Moderate 10 Name: AQI_Bucket, dtype: int64 City Name:Talcher and AQI Index AQI_Bucket Moderate 324 Satisfactory 150 Very Poor 97 Poor 84 Severe 24 Good 19 Name: AQI_Bucket, dtype: int64 City Name:Thiruvananthapuram and AQI Index AQI_Bucket Satisfactory 768 Moderate 154 Good 126 Poor 4 Name: AQI_Bucket, dtype: int64 City Name:Visakhapatnam and AQI Index AQI_Bucket Moderate 580 Satisfactory 447 Poor 74 Good 52 Very Poor 18 Name: AQI_Bucket, dtype: int64 . Based on the above analysis, we found out that Air Quality for Delhi is worst in all the cities under study. . We can also conclude that in general Tier 2 and Tier 3 cities have much better air quality. Aizwal and Shillong have the best air quality as compared to other cities in the study. . Year wise analysis- Pan India Data . # Adding month and year into the dataset so that we can analyse month and year wise trends df1=df.copy() df1[&#39;year&#39;]=df1[&#39;Date&#39;].dt.year df1[&#39;month&#39;]=df1[&#39;Date&#39;].dt.month . . year=df1.groupby(&#39;year&#39;)[[&#39;PM&#39;,&#39;PM10&#39;, &#39;NO&#39;, &#39;NO2&#39;, &#39;NOx&#39;, &#39;NH3&#39;, &#39;CO&#39;, &#39;SO2&#39;,&#39;O3&#39;, &#39;Benzene&#39;, &#39;Toluene&#39;,&#39;AQI&#39;]].mean().reset_index() f&quot;The average concertration of pollutants across different years is:&quot;,(year[0:5]) . . (&#39;The average concertration of pollutants across different years is:&#39;, year PM PM10 NO NO2 NOx NH3 0 2015 83.323750 186.018164 16.588714 23.729427 35.541396 37.713707 1 2016 92.223729 145.500156 19.408612 31.362462 30.861736 39.499053 2 2017 86.034757 129.082620 17.666010 31.963634 24.023689 30.365794 3 2018 69.230657 133.263001 18.813078 33.353737 37.169719 21.890958 4 2019 58.958241 112.964335 16.443662 28.497536 33.337306 18.965398 CO SO2 O3 Benzene Toluene AQI 0 4.205297 13.513310 32.919829 4.290253 7.150069 212.463054 1 1.807855 10.063124 38.121916 2.330611 5.605426 197.150019 2 1.256459 12.225970 34.409825 1.600159 4.477028 181.472789 3 3.004921 18.171016 35.221742 2.692337 11.085401 182.684312 4 2.298988 16.353351 33.051420 3.298604 10.916312 156.518173 ) . In the above case I have not considered the year 2020 as the data is incomplete. The year does not include winter months as the pollution is maximum during this period. . pollutants=[&#39;PM&#39;,&#39;PM10&#39;, &#39;NO&#39;, &#39;NO2&#39;, &#39;NOx&#39;, &#39;NH3&#39;, &#39;CO&#39;, &#39;SO2&#39;,&#39;O3&#39;, &#39;Benzene&#39;, &#39;Toluene&#39;, &#39;AQI&#39;] . . #Creating a function to plot the data using altair def plot_trail(data,x,y, size): base=alt.Chart(data).properties(width=800) return base.mark_trail().encode(x=x,y=y,size=y, tooltip=y).interactive() . . #plotting the data for i in pollutants: chart=plot_trail(data=year, x=&quot;year&quot;, y=i, size=i) chart.display() . . The above is a collection of simple graphs which show the long term trend of pollutants spanned across years from 2015 to 2019. The general trend is decreasing pollutants except NOx and Toulene. . Month wise Analysis: Pan India . There is a general awareness that the winter months have more pollution generally as compared to hot summer period. Lets test this assumption. . # Converting Date into month month=df1.groupby(&#39;month&#39;)[[&#39;PM&#39;,&#39;PM10&#39;, &#39;NO&#39;, &#39;NO2&#39;, &#39;NOx&#39;, &#39;NH3&#39;, &#39;CO&#39;, &#39;SO2&#39;,&#39;O3&#39;, &#39;Benzene&#39;, &#39;Toluene&#39;,&#39;AQI&#39;]].mean().reset_index() month.head() . . month PM PM10 NO NO2 NOx NH3 CO SO2 O3 Benzene Toluene AQI . 0 1 | 107.757661 | 166.293820 | 24.600325 | 36.447812 | 43.785974 | 30.247974 | 3.043315 | 17.842014 | 37.278333 | 4.180677 | 10.555584 | 231.674918 | . 1 2 | 82.897863 | 147.695830 | 21.872488 | 34.247877 | 41.045947 | 25.783539 | 2.915327 | 16.829378 | 38.102372 | 3.861679 | 8.972077 | 202.905197 | . 2 3 | 63.933472 | 116.806991 | 16.716655 | 27.662019 | 32.297255 | 21.994147 | 2.195853 | 15.656436 | 38.298299 | 5.962314 | 10.946681 | 164.735281 | . 3 4 | 52.636271 | 105.590680 | 14.346990 | 24.442319 | 25.491347 | 20.741337 | 1.671886 | 14.202350 | 39.002945 | 2.046507 | 5.590473 | 143.355120 | . 4 5 | 51.305960 | 105.301199 | 13.186773 | 22.830505 | 23.591067 | 20.468013 | 1.406012 | 14.299050 | 39.926681 | 2.646210 | 7.391661 | 135.489579 | . #plotting the graphs for i in pollutants: chart=plot_trail(data=month, x=&quot;month&quot;, y=i, size=i) chart.display() . . As it is shown from the graphs above, the pollutants increase during the winter months and decrease during summer months. . A comparison of a landlocked city and ocean facing city . Here I will be comparing two different cities Delhi and Mumbai, Delhi and mumbai have similar demographies with Delhi being the capital of India and Mumbai being the financial captial of India. The two cities are similar in terms of population, with the major geographical difference that Delhi is landlocked from all sides and mumbai has Arbian sea on its western end . dm= df1.set_index(&quot;City&quot;).loc[[&#39;Delhi&#39;,&#39;Mumbai&#39;]] # Dataframe which includes only Delhi and Mumbai as cities . . dm.pivot_table(index=[&#39;City&#39;,&#39;AQI_Bucket&#39;],columns=&#39;year&#39;, values=[&#39;month&#39;], aggfunc={&quot;month&quot;:&#39;count&#39;}, fill_value=&quot;Data Not Avilable&quot;) . . month . year 2015 2016 2017 2018 2019 2020 . City AQI_Bucket . Delhi Good Data Not Avilable | Data Not Avilable | 21 | Data Not Avilable | Data Not Avilable | Data Not Avilable | . Moderate 51 | 83 | 54 | 105 | 128 | 98 | . Poor 130 | 105 | 68 | 105 | 99 | 35 | . Satisfactory 1 | 4 | 50 | 35 | 43 | 25 | . Severe 33 | 85 | 44 | 38 | 36 | 3 | . Very Poor 150 | 88 | 119 | 82 | 59 | 22 | . Mumbai Good Data Not Avilable | Data Not Avilable | Data Not Avilable | 1 | 10 | 15 | . Moderate Data Not Avilable | Data Not Avilable | Data Not Avilable | 93 | 133 | 59 | . Poor Data Not Avilable | Data Not Avilable | Data Not Avilable | 3 | 20 | 12 | . Satisfactory Data Not Avilable | Data Not Avilable | Data Not Avilable | 129 | 202 | 97 | . Very Poor Data Not Avilable | Data Not Avilable | Data Not Avilable | 1 | Data Not Avilable | Data Not Avilable | . As we can see from this data, that Mumbai did not have any days where the air quality is severe, Also for majority of the time the air quality ranges from moderate to satifactory for the case of Mumbai whereas for the case of Delhi the air quality majorily lies between Moderate to very poor. . Checking the PM density for both Mumbai and delhi . dm.pivot_table(index=[&#39;City&#39;,&#39;AQI_Bucket&#39;],columns=&#39;year&#39;, values=[&#39;PM&#39;], aggfunc={&quot;PM&quot;:np.mean}, fill_value=&quot;Data Not Available&quot;) . . PM . year 2015 2016 2017 2018 2019 2020 . City AQI_Bucket . Delhi Good Data Not Available | Data Not Available | 24.7165 | Data Not Available | Data Not Available | Data Not Available | . Moderate 52.0778 | 54.3948 | 66.4422 | 55.7992 | 59.0817 | 55.0774 | . Poor 81.597 | 87.1392 | 103.796 | 103.606 | 97.7254 | 108.023 | . Satisfactory 34.89 | 42.035 | 38.9318 | 31.8414 | 27.7247 | 31.9072 | . Severe 236.617 | 274.652 | 266.548 | 264.749 | 305.273 | 309.36 | . Very Poor 144.817 | 152.894 | 170.622 | 171.58 | 172.607 | 172.456 | . Mumbai Good Data Not Available | Data Not Available | Data Not Available | 16.22 | 8.747 | 10.4847 | . Moderate Data Not Available | Data Not Available | Data Not Available | 51.4305 | 55.1386 | 59.9103 | . Poor Data Not Available | Data Not Available | Data Not Available | 105.23 | 93.716 | 96.1292 | . Satisfactory Data Not Available | Data Not Available | Data Not Available | 20.6702 | 16.7511 | 19.0848 | . Very Poor Data Not Available | Data Not Available | Data Not Available | 122.18 | Data Not Available | Data Not Available | . As it can be seen here that even on good/Satisfactory days more particle matter is present in air for Delhi vis a vis Mumbai. In essence Mumbai has much better quality air as compared to delhi. This can be also attributed to the fact that Mumbai is located close to the sea line. . Gauging the effect of lockdown on pollution . India had a 4 month complete lockdown period due to covid. Generally during this time pollution levels dropped quite low. . ym=df1.groupby([&#39;year&#39;,&#39;month&#39;])[&#39;AQI&#39;].mean().reset_index() . . data=ym[ym[&#39;month&#39;]&lt;=7] . . alt.Chart(data).mark_line().encode( x=&#39;month:O&#39;, y=&#39;AQI:Q&#39;, color=&#39;year:O&#39;,strokeDash=&#39;year:O&#39;).properties(width=500) . . As can be seen from the graph that the AQI is much better for the months post March. Thus the lockdown has had a positive impact on the air quality. . Analysis of Jaipur city . #Checking the air quality index for Jaipur by seggregating Jaipur as cityy jpr=df[df[&#39;City&#39;]==&quot;Jaipur&quot;] jpr=jpr.drop([&#39;Xylene&#39;], axis=1) #The master data does not capture values for Xylene. Dropping the Xylene coloumn . . #Now plotting the data for every pollutant for i in pollutants: chart=plot_trail(data=jpr,x=&#39;Date&#39;,y=i,size=i) chart.display() . . Jaipur also follows the trend where the air pollution increases during winter months. The AQI amd PM10 is also high during summer months due to intense dust storms. . Air Quality Serverity Analysis: Based on Air Quality Standards specified by Govt. of India . per_PM= 40 #annual mean per_Pm10=60 # annual mean per_O3= 100 # 8 hour mean per_NO2= 40 # annual mean per_SO2=50 # 24 hour mean per_CO= 2 #8 hours per_NH3= 100 # annual mean per_Benzene= 5 #annual mean . # removing the nan values jpr_wn=jpr[jpr[&#39;Date&#39;]&gt;=&#39;2017-06-20&#39;] . . jpr_pm=jpr_wn[[&#39;Date&#39;,&#39;PM&#39;]] jpr_pm10=jpr_wn[[&#39;Date&#39;,&#39;PM10&#39;]] jpr_o3=jpr_wn[[&#39;Date&#39;,&#39;O3&#39;]] jpr_no2=jpr_wn[[&#39;Date&#39;,&#39;NO2&#39;]] jpr_so2=jpr_wn[[&#39;Date&#39;,&#39;SO2&#39;]] jpr_co=jpr_wn[[&#39;Date&#39;,&#39;CO&#39;]] jpr_nh3=jpr_wn[[&#39;Date&#39;,&#39;NH3&#39;]] jpr_benzene=jpr_wn[[&#39;Date&#39;,&#39;Benzene&#39;]] . . jpr.head() . . City Date PM PM10 NO NO2 NOx NH3 CO SO2 O3 Benzene Toluene AQI AQI_Bucket . 16587 Jaipur | 2017-06-14 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 16588 Jaipur | 2017-06-15 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 16589 Jaipur | 2017-06-16 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 16590 Jaipur | 2017-06-17 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . 16591 Jaipur | 2017-06-18 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . bars= alt.Chart(title=&quot;PM concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;PM&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_PM]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_pm) . . As can be seen from the above graph the PM 2.5 concentration is consistantly high above the recommended le . bars= alt.Chart(title=&quot;PM10 concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;PM10&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_Pm10]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_pm10) . . This concentration is also very high for most of the days in Jaipur . bars= alt.Chart(title=&quot;Ozone concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;O3&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_O3]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_o3) . . Except for some months in 2018 O3 level is pretty much regulated in Jaipur . bars= alt.Chart(title=&quot;NO2 concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;NO2&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_NO2]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_no2) . . This graphs shows that NO2 level is above the limit for most of the cases and a drop in NO2 Levels can be seen during summers . bars= alt.Chart(title=&quot;SO2 concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;SO2&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_SO2]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_so2) . . Finally a metric in which the pollutant is below the permissible level. . bars= alt.Chart(title=&quot;CO concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;CO&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_CO]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_co) . . Barring some days during winter months the concentration of CO is lower than permissible level. . bars= alt.Chart(title=&quot;Ammonia concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;NH3&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_NH3]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_nh3) . . Ammonia concerntration is also much lower than the permissible levels . bars= alt.Chart(title=&quot;Benzene concentration in Jaipur&quot;, width=1000).mark_bar().encode(x=&#39;Date:T&#39;, y=&#39;Benzene&#39;) overlay= pd.DataFrame({&#39;x&#39;:[per_Benzene]}) vline=alt.Chart(overlay).mark_rule(color=&#39;red&#39;, strokeWidth=3).encode(y=&#39;x&#39;) alt.layer(bars, vline, data=jpr_benzene) . . The winter trend is again repeated here where the concentration of Benzene increases during winter months and goes down during summers . References: (https://waqi.info/) (https://www.health.ny.gov/environmental/indoors/air/pmq_a.htm) (https://en.wikipedia.org/wiki/Particulates) (https://en.wikipedia.org/wiki/NOx) (https://www.health.ny.gov/environmental/emergency/chemical_terrorism/ammonia_general.htm) (https://www2.sepa.org.uk/SPRIPA/Pages/SubstanceInformation.aspx?pid=21) (https://www.atsdr.cdc.gov/phs/phs.asp?id=159&amp;tid=29) (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2996004/) (https://www.atsdr.cdc.gov/phs/phs.asp?id=293&amp;tid=53) (https://en.wikipedia.org/wiki/Air_quality_guideline) (https://en.wikipedia.org/wiki/Air_quality_guideline) (http://www.arthapedia.in/index.php?title=Ambient_Air_Quality_Standards_in_India) .",
            "url": "http://kaushalbundel.page/pollution/altair/pandas/visualization/2020/11/25/Air_Quality_Study1.html",
            "relUrl": "/pollution/altair/pandas/visualization/2020/11/25/Air_Quality_Study1.html",
            "date": " • Nov 25, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "http://kaushalbundel.page/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I am Kaushal Bundel. I enjoy solving problems and this blog is an attempt to share these observation with wider world. . Please drop a mail to kaushalbundel@gmail.com .",
          "url": "http://kaushalbundel.page/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "http://kaushalbundel.page/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}